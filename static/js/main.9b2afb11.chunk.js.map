{"version":3,"sources":["logo.svg","Pages/FetchOrders.js","search.jsx","Pages/covidImg.jsx","components/MainDoc.jsx","App.js","reportWebVitals.js","Pages/UserReducer.js","store.js","index.js"],"names":["FetchOrders","createAsyncThunk","a","fetch","response","json","res2","FetchOrders1","FetchOrders2","value","mode","data","options","name","code","ControllableStates","dispatch","useDispatch","React","useState","setValue","inputValue","setInputValue","graph","src","alt","covidImg","img","className","id","Autocomplete","onChange","event","newValue","onInputChange","newInputValue","getOptionLabel","option","style","width","renderInput","params","TextField","label","variant","height","MainDoc","yesdate","moment","subtract","format","cases","useSelector","state","todayCases","deaths","todayDeaths","recovered","todayRecovered","Afghanistan","Albania","Algeria","Andorra","Angola","Anguilla","Antigua","Argentina","Armenia","Aruba","Australia","Austria","Azerbaijan","Bahamas","Bahrain","Bangladesh","Barbados","Belarus","Belgium","Belize","Benin","Bermuda","Bhutan","Bolivia","Caribbean","Bosnia","Botswana","Brazil","Virgin","Brunei","console","log","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","UserReducer","createSlice","initialState","Bulgaria","Burkina","Cambodia","Cameroon","Canada","Cabo","Cayman","Central","Chad","Chile","China","Colombia","Comoros","Congo","Cook","Costa","Côte","Croatia","Cuba","Curaçao","Cyprus","Czechia","DRC","Denmark","Djibouti","Dominica","Dominican","Ecuador","Egypt","Salvador","Guinea","Estonia","Swaziland","Ethiopia","Faroe","Falkland","Fiji","Finland","France","Polynesia","Gabon","Gambia","Georgia","Germany","Ghana","Gibraltar","Greece","Greenland","Grenada","Guatemala","Guernsey","status","error","status1","error1","status2","error2","reducers","extraReducers","pending","fulfilled","action","payload","rejected","message","name1","timeline","actions","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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YACxCC,EAASlC,aAAY,SAACC,GAAD,OAAWA,EAAMiC,UACtCC,EAASnC,aAAY,SAACC,GAAD,OAAWA,EAAMkC,UACtCC,EAASpC,aAAY,SAACC,GAAD,OAAWA,EAAMmC,UAoCtC9D,EAAW0B,aAAY,SAACC,GAAD,OAAWA,EAAM3B,YAC9C+D,QAAQC,IAAIhE,GAYZ,OACE,mCACE,gCACE,gEACA,wBAAOG,GAAG,YAAV,UACE,+BACE,8CACA,8CACA,wCACA,iDACA,8CACA,uDAEF,+BACE,mCAAMsB,KACN,mCAAMG,KACN,mCAAMC,KACN,mCAAMC,KACN,mCAAMC,KACN,mCAAMC,WAGV,wBAAQiC,QAAS,kBA3BrB3E,EAAShB,UACTgB,EAAST,MA0BL,6BAEA,gCACE,wEACA,wBAAOsB,GAAG,YAAV,UACE,qBAAID,UAAU,iBAAd,UACE,yCACA,+BACG,IADH,iBAEgB,uBAFhB,IAE0B,4CAAemB,WAG3C,+BACE,+CACA,mCAAMY,QAER,+BACE,2CACA,mCAAMC,QAER,+BACE,2CACA,mCAAMC,EAAN,UAEF,+BACE,4CACA,mCAAMC,EAAN,UAEF,+BACE,2CACA,mCAAMC,QAER,+BACE,6CACA,mCAAMC,QAER,+BACE,4CACA,mCAAMC,QAER,+BACE,8CACA,mCAAMC,QAER,+BACE,4CACA,mCAAMC,QAER,+BACE,0CACA,mCAAMC,QAER,+BACE,8CACA,mCAAMC,QAER,+BACE,4CACA,mCAAMC,QAER,+BACE,+CACA,mCAAMC,QAER,+BACE,4CACA,mCAAMC,QAER,+BACE,4CACA,mCAAMC,QAER,+BACE,+CACA,mCAAMC,QAER,+BACE,6CACA,mCAAMC,QAER,+BACE,4CACA,mCAAMC,QAER,+BACE,4CACA,mCAAMC,QAER,+BACE,2CACA,mCAAMC,QAER,+BACE,0CACA,mCAAMC,QAER,+BACE,4CACA,mCAAMC,QAER,+BACE,2CACA,mCAAMC,QAER,+BACE,4CACA,mCAAMC,QAER,+BACE,8CACA,mCAAMC,QAER,+BACE,2CACA,mCAAMC,QAER,+BACE,6CACA,mCAAMC,QAER,+BACE,2CACA,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","file":"static/js/main.9b2afb11.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nconst value = \"\";\n\nexport const getPurchaseOrdersApiEndPoint =\n  \"https://disease.sh/v3/covid-19/all\";\n\nexport const getPurchaseOrdersApiEndPoint1 =\n  \"https://disease.sh/v3/covid-19/vaccine/coverage/countries?lastdays=1\";\n\n// export const getPurchaseOrdersApiEndPoint2 =\n//   \"https://corona.dnsforfamily.com/graph.png?c=\";\n\nexport const FetchOrders = createAsyncThunk(\"fetchOrders\", async () => {\n  const response = await fetch(getPurchaseOrdersApiEndPoint);\n  const res2 = await response.json();\n  return res2;\n  // res2[Math.floor(Math.random()*10)].name\n});\n\nexport const FetchOrders1 = createAsyncThunk(\"fetchOrders1\", async () => {\n  const response = await fetch(getPurchaseOrdersApiEndPoint1);\n  const res2 = await response.json();\n  return res2;\n  // res2[Math.floor(Math.random()*10)].name\n});\n\nexport const FetchOrders2 = createAsyncThunk(\"fetchOrders2\", async (value) => {\n  const response = await fetch(\n    \"https://corona.dnsforfamily.com/graph.png?c=\" + value,\n    { mode: \"no-cors\" }\n  );\n  const res2 = await response.data;\n  return res2;\n});\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { FetchOrders2 } from \"./Pages/FetchOrders\";\nimport covidImg from \"./Pages/covidImg\";\n\nconst options = [\n  { name: \"Afghanistan\", code: \"AF\" },\n  { name: \"land Islands\", code: \"AX\" },\n  { name: \"Albania\", code: \"AL\" },\n  { name: \"Algeria\", code: \"DZ\" },\n  { name: \"American Samoa\", code: \"AS\" },\n  { name: \"AndorrA\", code: \"AD\" },\n  { name: \"Angola\", code: \"AO\" },\n  { name: \"Anguilla\", code: \"AI\" },\n  { name: \"Antarctica\", code: \"AQ\" },\n  { name: \"Antigua and Barbuda\", code: \"AG\" },\n  { name: \"Argentina\", code: \"AR\" },\n  { name: \"Armenia\", code: \"AM\" },\n  { name: \"Aruba\", code: \"AW\" },\n  { name: \"Australia\", code: \"AU\" },\n  { name: \"Austria\", code: \"AT\" },\n  { name: \"Azerbaijan\", code: \"AZ\" },\n  { name: \"Bahamas\", code: \"BS\" },\n  { name: \"Bahrain\", code: \"BH\" },\n  { name: \"Bangladesh\", code: \"BD\" },\n  { name: \"Barbados\", code: \"BB\" },\n  { name: \"Belarus\", code: \"BY\" },\n  { name: \"Belgium\", code: \"BE\" },\n  { name: \"Belize\", code: \"BZ\" },\n  { name: \"Benin\", code: \"BJ\" },\n  { name: \"Bermuda\", code: \"BM\" },\n  { name: \"Bhutan\", code: \"BT\" },\n  { name: \"Bolivia\", code: \"BO\" },\n  { name: \"Bosnia and Herzegovina\", code: \"BA\" },\n  { name: \"Botswana\", code: \"BW\" },\n  { name: \"Bouvet Island\", code: \"BV\" },\n  { name: \"Brazil\", code: \"BR\" },\n  { name: \"British Indian Ocean Territory\", code: \"IO\" },\n  { name: \"Brunei Darussalam\", code: \"BN\" },\n  { name: \"Bulgaria\", code: \"BG\" },\n  { name: \"Burkina Faso\", code: \"BF\" },\n  { name: \"Burundi\", code: \"BI\" },\n  { name: \"Cambodia\", code: \"KH\" },\n  { name: \"Cameroon\", code: \"CM\" },\n  { name: \"Canada\", code: \"CA\" },\n  { name: \"Cape Verde\", code: \"CV\" },\n  { name: \"Cayman Islands\", code: \"KY\" },\n  { name: \"Central African Republic\", code: \"CF\" },\n  { name: \"Chad\", code: \"TD\" },\n  { name: \"Chile\", code: \"CL\" },\n  { name: \"China\", code: \"CN\" },\n  { name: \"Christmas Island\", code: \"CX\" },\n  { name: \"Cocos (Keeling) Islands\", code: \"CC\" },\n  { name: \"Colombia\", code: \"CO\" },\n  { name: \"Comoros\", code: \"KM\" },\n  { name: \"Congo\", code: \"CG\" },\n  { name: \"Congo, The Democratic Republic of the\", code: \"CD\" },\n  { name: \"Cook Islands\", code: \"CK\" },\n  { name: \"Costa Rica\", code: \"CR\" },\n  { name: \"Cote D'Ivoire\", code: \"CI\" },\n  { name: \"Croatia\", code: \"HR\" },\n  { name: \"Cuba\", code: \"CU\" },\n  { name: \"Cyprus\", code: \"CY\" },\n  { name: \"Czech Republic\", code: \"CZ\" },\n  { name: \"Denmark\", code: \"DK\" },\n  { name: \"Djibouti\", code: \"DJ\" },\n  { name: \"Dominica\", code: \"DM\" },\n  { name: \"Dominican Republic\", code: \"DO\" },\n  { name: \"Ecuador\", code: \"EC\" },\n  { name: \"Egypt\", code: \"EG\" },\n  { name: \"El Salvador\", code: \"SV\" },\n  { name: \"Equatorial Guinea\", code: \"GQ\" },\n  { name: \"Eritrea\", code: \"ER\" },\n  { name: \"Estonia\", code: \"EE\" },\n  { name: \"Ethiopia\", code: \"ET\" },\n  { name: \"Falkland Islands (Malvinas)\", code: \"FK\" },\n  { name: \"Faroe Islands\", code: \"FO\" },\n  { name: \"Fiji\", code: \"FJ\" },\n  { name: \"Finland\", code: \"FI\" },\n  { name: \"France\", code: \"FR\" },\n  { name: \"French Guiana\", code: \"GF\" },\n  { name: \"French Polynesia\", code: \"PF\" },\n  { name: \"French Southern Territories\", code: \"TF\" },\n  { name: \"Gabon\", code: \"GA\" },\n  { name: \"Gambia\", code: \"GM\" },\n  { name: \"Georgia\", code: \"GE\" },\n  { name: \"Germany\", code: \"DE\" },\n  { name: \"Ghana\", code: \"GH\" },\n  { name: \"Gibraltar\", code: \"GI\" },\n  { name: \"Greece\", code: \"GR\" },\n  { name: \"Greenland\", code: \"GL\" },\n  { name: \"Grenada\", code: \"GD\" },\n  { name: \"Guadeloupe\", code: \"GP\" },\n  { name: \"Guam\", code: \"GU\" },\n  { name: \"Guatemala\", code: \"GT\" },\n  { name: \"Guernsey\", code: \"GG\" },\n  { name: \"Guinea\", code: \"GN\" },\n  { name: \"Guinea-Bissau\", code: \"GW\" },\n  { name: \"Guyana\", code: \"GY\" },\n  { name: \"Haiti\", code: \"HT\" },\n  { name: \"Heard Island and Mcdonald Islands\", code: \"HM\" },\n  { name: \"Holy See (Vatican City State)\", code: \"VA\" },\n  { name: \"Honduras\", code: \"HN\" },\n  { name: \"Hong Kong\", code: \"HK\" },\n  { name: \"Hungary\", code: \"HU\" },\n  { name: \"Iceland\", code: \"IS\" },\n  { name: \"India\", code: \"IN\" },\n  { name: \"Indonesia\", code: \"ID\" },\n  { name: \"Iran, Islamic Republic Of\", code: \"IR\" },\n  { name: \"Iraq\", code: \"IQ\" },\n  { name: \"Ireland\", code: \"IE\" },\n  { name: \"Isle of Man\", code: \"IM\" },\n  { name: \"Israel\", code: \"IL\" },\n  { name: \"Italy\", code: \"IT\" },\n  { name: \"Jamaica\", code: \"JM\" },\n  { name: \"Japan\", code: \"JP\" },\n  { name: \"Jersey\", code: \"JE\" },\n  { name: \"Jordan\", code: \"JO\" },\n  { name: \"Kazakhstan\", code: \"KZ\" },\n  { name: \"Kenya\", code: \"KE\" },\n  { name: \"Kiribati\", code: \"KI\" },\n  { name: \"Korea, Democratic People'S Republic of\", code: \"KP\" },\n  { name: \"Korea, Republic of\", code: \"KR\" },\n  { name: \"Kuwait\", code: \"KW\" },\n  { name: \"Kyrgyzstan\", code: \"KG\" },\n  { name: \"Lao People'S Democratic Republic\", code: \"LA\" },\n  { name: \"Latvia\", code: \"LV\" },\n  { name: \"Lebanon\", code: \"LB\" },\n  { name: \"Lesotho\", code: \"LS\" },\n  { name: \"Liberia\", code: \"LR\" },\n  { name: \"Libyan Arab Jamahiriya\", code: \"LY\" },\n  { name: \"Liechtenstein\", code: \"LI\" },\n  { name: \"Lithuania\", code: \"LT\" },\n  { name: \"Luxembourg\", code: \"LU\" },\n  { name: \"Macao\", code: \"MO\" },\n  { name: \"Macedonia, The Former Yugoslav Republic of\", code: \"MK\" },\n  { name: \"Madagascar\", code: \"MG\" },\n  { name: \"Malawi\", code: \"MW\" },\n  { name: \"Malaysia\", code: \"MY\" },\n  { name: \"Maldives\", code: \"MV\" },\n  { name: \"Mali\", code: \"ML\" },\n  { name: \"Malta\", code: \"MT\" },\n  { name: \"Marshall Islands\", code: \"MH\" },\n  { name: \"Martinique\", code: \"MQ\" },\n  { name: \"Mauritania\", code: \"MR\" },\n  { name: \"Mauritius\", code: \"MU\" },\n  { name: \"Mayotte\", code: \"YT\" },\n  { name: \"Mexico\", code: \"MX\" },\n  { name: \"Micronesia, Federated States of\", code: \"FM\" },\n  { name: \"Moldova, Republic of\", code: \"MD\" },\n  { name: \"Monaco\", code: \"MC\" },\n  { name: \"Mongolia\", code: \"MN\" },\n  { name: \"Montenegro\", code: \"ME\" },\n  { name: \"Montserrat\", code: \"MS\" },\n  { name: \"Morocco\", code: \"MA\" },\n  { name: \"Mozambique\", code: \"MZ\" },\n  { name: \"Myanmar\", code: \"MM\" },\n  { name: \"Namibia\", code: \"NA\" },\n  { name: \"Nauru\", code: \"NR\" },\n  { name: \"Nepal\", code: \"NP\" },\n  { name: \"Netherlands\", code: \"NL\" },\n  { name: \"Netherlands Antilles\", code: \"AN\" },\n  { name: \"New Caledonia\", code: \"NC\" },\n  { name: \"New Zealand\", code: \"NZ\" },\n  { name: \"Nicaragua\", code: \"NI\" },\n  { name: \"Niger\", code: \"NE\" },\n  { name: \"Nigeria\", code: \"NG\" },\n  { name: \"Niue\", code: \"NU\" },\n  { name: \"Norfolk Island\", code: \"NF\" },\n  { name: \"Northern Mariana Islands\", code: \"MP\" },\n  { name: \"Norway\", code: \"NO\" },\n  { name: \"Oman\", code: \"OM\" },\n  { name: \"Pakistan\", code: \"PK\" },\n  { name: \"Palau\", code: \"PW\" },\n  { name: \"Palestinian Territory, Occupied\", code: \"PS\" },\n  { name: \"Panama\", code: \"PA\" },\n  { name: \"Papua New Guinea\", code: \"PG\" },\n  { name: \"Paraguay\", code: \"PY\" },\n  { name: \"Peru\", code: \"PE\" },\n  { name: \"Philippines\", code: \"PH\" },\n  { name: \"Pitcairn\", code: \"PN\" },\n  { name: \"Poland\", code: \"PL\" },\n  { name: \"Portugal\", code: \"PT\" },\n  { name: \"Puerto Rico\", code: \"PR\" },\n  { name: \"Qatar\", code: \"QA\" },\n  { name: \"Reunion\", code: \"RE\" },\n  { name: \"Romania\", code: \"RO\" },\n  { name: \"Russian Federation\", code: \"RU\" },\n  { name: \"RWANDA\", code: \"RW\" },\n  { name: \"Saint Helena\", code: \"SH\" },\n  { name: \"Saint Kitts and Nevis\", code: \"KN\" },\n  { name: \"Saint Lucia\", code: \"LC\" },\n  { name: \"Saint Pierre and Miquelon\", code: \"PM\" },\n  { name: \"Saint Vincent and the Grenadines\", code: \"VC\" },\n  { name: \"Samoa\", code: \"WS\" },\n  { name: \"San Marino\", code: \"SM\" },\n  { name: \"Sao Tome and Principe\", code: \"ST\" },\n  { name: \"Saudi Arabia\", code: \"SA\" },\n  { name: \"Senegal\", code: \"SN\" },\n  { name: \"Serbia\", code: \"RS\" },\n  { name: \"Seychelles\", code: \"SC\" },\n  { name: \"Sierra Leone\", code: \"SL\" },\n  { name: \"Singapore\", code: \"SG\" },\n  { name: \"Slovakia\", code: \"SK\" },\n  { name: \"Slovenia\", code: \"SI\" },\n  { name: \"Solomon Islands\", code: \"SB\" },\n  { name: \"Somalia\", code: \"SO\" },\n  { name: \"South Africa\", code: \"ZA\" },\n  { name: \"South Georgia and the South Sandwich Islands\", code: \"GS\" },\n  { name: \"Spain\", code: \"ES\" },\n  { name: \"Sri Lanka\", code: \"LK\" },\n  { name: \"Sudan\", code: \"SD\" },\n  { name: \"Suriname\", code: \"SR\" },\n  { name: \"Svalbard and Jan Mayen\", code: \"SJ\" },\n  { name: \"Swaziland\", code: \"SZ\" },\n  { name: \"Sweden\", code: \"SE\" },\n  { name: \"Switzerland\", code: \"CH\" },\n  { name: \"Syrian Arab Republic\", code: \"SY\" },\n  { name: \"Taiwan, Province of China\", code: \"TW\" },\n  { name: \"Tajikistan\", code: \"TJ\" },\n  { name: \"Tanzania, United Republic of\", code: \"TZ\" },\n  { name: \"Thailand\", code: \"TH\" },\n  { name: \"Timor-Leste\", code: \"TL\" },\n  { name: \"Togo\", code: \"TG\" },\n  { name: \"Tokelau\", code: \"TK\" },\n  { name: \"Tonga\", code: \"TO\" },\n  { name: \"Trinidad and Tobago\", code: \"TT\" },\n  { name: \"Tunisia\", code: \"TN\" },\n  { name: \"Turkey\", code: \"TR\" },\n  { name: \"Turkmenistan\", code: \"TM\" },\n  { name: \"Turks and Caicos Islands\", code: \"TC\" },\n  { name: \"Tuvalu\", code: \"TV\" },\n  { name: \"Uganda\", code: \"UG\" },\n  { name: \"Ukraine\", code: \"UA\" },\n  { name: \"United Arab Emirates\", code: \"AE\" },\n  { name: \"United Kingdom\", code: \"GB\" },\n  { name: \"United States\", code: \"US\" },\n  { name: \"United States Minor Outlying Islands\", code: \"UM\" },\n  { name: \"Uruguay\", code: \"UY\" },\n  { name: \"Uzbekistan\", code: \"UZ\" },\n  { name: \"Vanuatu\", code: \"VU\" },\n  { name: \"Venezuela\", code: \"VE\" },\n  { name: \"Viet Nam\", code: \"VN\" },\n  { name: \"Virgin Islands, British\", code: \"VG\" },\n  { name: \"Virgin Islands, U.S.\", code: \"VI\" },\n  { name: \"Wallis and Futuna\", code: \"WF\" },\n  { name: \"Western Sahara\", code: \"EH\" },\n  { name: \"Yemen\", code: \"YE\" },\n  { name: \"Zambia\", code: \"ZM\" },\n  { name: \"Zimbabwe\", code: \"ZW\" },\n];\n\nexport default function ControllableStates() {\n  const dispatch = useDispatch();\n  const [value, setValue] = React.useState(options[0].code);\n  const [inputValue, setInputValue] = React.useState(options[0].name);\n  dispatch(FetchOrders2(value));\n  dispatch(covidImg(value));\n  let img = \"https://corona.dnsforfamily.com/graph.png?c=\" + value;\n\n  // useEffect(() => {\n  //     // send HTTP request\n  //     dispatch(FetchOrders(value));\n  //     // save response to variable\n  // }, [dispatch, value])\n\n  return (\n    <div className=\"ControllableStates\" id=\"states\">\n      {/* <div>{`value: ${value !== null ? `'${value}'` : \"null\"}`}</div>\n      <div>{`inputValue: '${inputValue}'`}</div> */}\n      <br />\n      <Autocomplete\n        value={value}\n        onChange={(event, newValue) => {\n          setValue(newValue.code);\n        }}\n        inputValue={inputValue}\n        onInputChange={(event, newInputValue) => {\n          setInputValue(newInputValue);\n        }}\n        id=\"controllable-states-demo\"\n        options={options}\n        getOptionLabel={(option) => option.name}\n        style={{ width: 300 }}\n        renderInput={(params) => (\n          <TextField {...params} label=\"Country\" variant=\"outlined\" />\n        )}\n      />\n      <img src={img} width=\"667\" height=\"375\"></img>\n    </div>\n  );\n}\n","import React from \"react\";\r\n\r\nexport default function covidImg(value) {\r\n  let graph = \"https://corona.dnsforfamily.com/graph.png?c=\" + value;\r\n  return (\r\n    <div>\r\n      <img src={graph} alt=\"\" />)\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { FetchOrders, FetchOrders1 } from \"../Pages/FetchOrders\";\nimport { ResponsiveContainer, LineChart, Line, XAxis, YAxis } from \"recharts\";\nimport \"../index.css\";\nimport moment from \"moment\";\nimport ControllableStates from \"../search\";\nimport \"./MainDoc.css\";\n\nconst MainDoc = () => {\n  const yesdate = moment().subtract(1, \"days\").format(\"M/D/YY\");\n  const dispatch = useDispatch();\n  const cases = useSelector((state) => state.cases.cases);\n  const todayCases = useSelector((state) => state.cases.todayCases);\n  const deaths = useSelector((state) => state.cases.deaths);\n  const todayDeaths = useSelector((state) => state.cases.todayDeaths);\n  const recovered = useSelector((state) => state.cases.recovered);\n  const todayRecovered = useSelector((state) => state.cases.todayRecovered);\n  // const status = useSelector((state) => state.MainDoc.status);\n  // const error = useSelector((state) => state.MainDoc.error);\n  const Afghanistan = useSelector((state) => state.Afghanistan);\n  const Albania = useSelector((state) => state.Albania);\n  const Algeria = useSelector((state) => state.Algeria);\n  const Andorra = useSelector((state) => state.Andorra);\n  const Angola = useSelector((state) => state.Angola);\n  const Anguilla = useSelector((state) => state.Anguilla);\n  const Antigua = useSelector((state) => state.Antigua);\n  const Argentina = useSelector((state) => state.Argentina);\n  const Armenia = useSelector((state) => state.Armenia);\n  const Aruba = useSelector((state) => state.Aruba);\n  const Australia = useSelector((state) => state.Australia);\n  const Austria = useSelector((state) => state.Austria);\n  const Azerbaijan = useSelector((state) => state.Azerbaijan);\n  const Bahamas = useSelector((state) => state.Bahamas);\n  const Bahrain = useSelector((state) => state.Bahrain);\n  const Bangladesh = useSelector((state) => state.Bangladesh);\n  const Barbados = useSelector((state) => state.Anguilla);\n  const Belarus = useSelector((state) => state.Belarus);\n  const Belgium = useSelector((state) => state.Belgium);\n  const Belize = useSelector((state) => state.Belize);\n  const Benin = useSelector((state) => state.Benin);\n  const Bermuda = useSelector((state) => state.Bermuda);\n  const Bhutan = useSelector((state) => state.Bhutan);\n  const Bolivia = useSelector((state) => state.Bolivia);\n  const Caribbean = useSelector((state) => state.Caribbean);\n  const Bosnia = useSelector((state) => state.Bosnia);\n  const Botswana = useSelector((state) => state.Botswana);\n  const Brazil = useSelector((state) => state.Brazil);\n  const Virgin = useSelector((state) => state.Virgin);\n  const Brunei = useSelector((state) => state.Brunei);\n  // const Belarus = useSelector((state) => state.Belarus);\n  // const Belarus = useSelector((state) => state.Belarus);\n  // const Belarus = useSelector((state) => state.Belarus);\n  // const Belarus = useSelector((state) => state.Belarus);\n  // const Belarus = useSelector((state) => state.Belarus);\n  // const Belarus = useSelector((state) => state.Belarus);\n  // const Belarus = useSelector((state) => state.Belarus);\n  // const Belarus = useSelector((state) => state.Belarus);\n  // const Belarus = useSelector((state) => state.Belarus);\n  // const Belarus = useSelector((state) => state.Belarus);\n  // const Belarus = useSelector((state) => state.Belarus);\n  // const Belarus = useSelector((state) => state.Belarus);\n  // const Belarus = useSelector((state) => state.Belarus);\n  // const Belarus = useSelector((state) => state.Belarus);\n  // const Belarus = useSelector((state) => state.Belarus);\n  // const Belarus = useSelector((state) => state.Belarus);\n  // const Belarus = useSelector((state) => state.Belarus);\n  // const Belarus = useSelector((state) => state.Belarus);\n  // const Belarus = useSelector((state) => state.Belarus);\n  // const Belarus = useSelector((state) => state.Belarus);\n  // const Belarus = useSelector((state) => state.Belarus);\n  // const Belarus = useSelector((state) => state.Belarus);\n  // const Belarus = useSelector((state) => state.Belarus);\n  // const Belarus = useSelector((state) => state.Belarus);\n  // const Belarus = useSelector((state) => state.Belarus);\n  // const Belarus = useSelector((state) => state.Belarus);\n  // const Belarus = useSelector((state) => state.Belarus);\n  // const Belarus = useSelector((state) => state.Belarus);\n  // const Belarus = useSelector((state) => state.Belarus);\n  // const Belarus = useSelector((state) => state.Belarus);\n  // const Belarus = useSelector((state) => state.Belarus);\n  // const Anguilla = useSelector((state) => state.Anguilla);\n  // const Anguilla = useSelector((state) => state.Anguilla);\n  // const Anguilla = useSelector((state) => state.Anguilla);\n\n  const covidImg = useSelector((state) => state.covidImg);\n  console.log(covidImg);\n  const data = [];\n  //   useEffect(() => {\n  //     dispatch(FetchOrders1());\n  //   }, [dispatch]);\n\n  const changename = () => {\n    dispatch(FetchOrders());\n    dispatch(FetchOrders1());\n    // dispatch(FetchOrders2());\n  };\n\n  return (\n    <>\n      <div>\n        <h1> Covid-19 Worldwide Statistics</h1>\n        <table id=\"customers\">\n          <tr>\n            <th>Total Cases:</th>\n            <th>Today Cases:</th>\n            <th>Death:</th>\n            <th>Today Deaths : </th>\n            <th>Recovered : </th>\n            <th>Today Recovered : </th>\n          </tr>\n          <tr>\n            <td> {cases}</td>\n            <td> {todayCases}</td>\n            <td> {deaths}</td>\n            <td> {todayDeaths}</td>\n            <td> {recovered}</td>\n            <td> {todayRecovered}</td>\n          </tr>\n        </table>\n        <button onClick={() => changename()}> Update Details</button>\n\n        <div>\n          <h1> Covid-19 Vaccine Worldwide Statistics</h1>\n          <table id=\"customers\">\n            <tr className=\"table-heading1\">\n              <th>Country</th>\n              <td>\n                {\" \"}\n                Total Vaccines<br></br> <strong>Date: {yesdate}</strong>\n              </td>\n            </tr>\n            <tr>\n              <th>Afghanistan :</th>\n              <td> {Afghanistan}</td>\n            </tr>\n            <tr>\n              <th>Albania :</th>\n              <td> {Albania}</td>\n            </tr>\n            <tr>\n              <th>Algeria :</th>\n              <td> {Algeria} </td>\n            </tr>\n            <tr>\n              <th>Andorra : </th>\n              <td> {Andorra} </td>\n            </tr>\n            <tr>\n              <th>Angola : </th>\n              <td> {Angola}</td>\n            </tr>\n            <tr>\n              <th>Anguilla : </th>\n              <td> {Anguilla}</td>\n            </tr>\n            <tr>\n              <th>Antigua : </th>\n              <td> {Antigua}</td>\n            </tr>\n            <tr>\n              <th>Argentina : </th>\n              <td> {Argentina}</td>\n            </tr>\n            <tr>\n              <th>Armenia : </th>\n              <td> {Armenia}</td>\n            </tr>\n            <tr>\n              <th>Aruba : </th>\n              <td> {Aruba}</td>\n            </tr>\n            <tr>\n              <th>Australia : </th>\n              <td> {Australia}</td>\n            </tr>\n            <tr>\n              <th>Austria : </th>\n              <td> {Austria}</td>\n            </tr>\n            <tr>\n              <th>Azerbaijan : </th>\n              <td> {Azerbaijan}</td>\n            </tr>\n            <tr>\n              <th>Bahamas : </th>\n              <td> {Bahamas}</td>\n            </tr>\n            <tr>\n              <th>Bahrain : </th>\n              <td> {Bahrain}</td>\n            </tr>\n            <tr>\n              <th>Bangladesh : </th>\n              <td> {Bangladesh}</td>\n            </tr>\n            <tr>\n              <th>Barbados : </th>\n              <td> {Barbados}</td>\n            </tr>\n            <tr>\n              <th>Belarus : </th>\n              <td> {Belarus}</td>\n            </tr>\n            <tr>\n              <th>Belgium : </th>\n              <td> {Belgium}</td>\n            </tr>\n            <tr>\n              <th>Belize : </th>\n              <td> {Belize}</td>\n            </tr>\n            <tr>\n              <th>Benin : </th>\n              <td> {Benin}</td>\n            </tr>\n            <tr>\n              <th>Bermuda : </th>\n              <td> {Bermuda}</td>\n            </tr>\n            <tr>\n              <th>Bhutan : </th>\n              <td> {Bhutan}</td>\n            </tr>\n            <tr>\n              <th>Bolivia : </th>\n              <td> {Bolivia}</td>\n            </tr>\n            <tr>\n              <th>Caribbean : </th>\n              <td> {Caribbean}</td>\n            </tr>\n            <tr>\n              <th>Bosnia : </th>\n              <td> {Bosnia}</td>\n            </tr>\n            <tr>\n              <th>Botswana : </th>\n              <td> {Botswana}</td>\n            </tr>\n            <tr>\n              <th>Brazil : </th>\n              <td> {Brazil}</td>\n            </tr>\n            <tr>\n              <th>Virgin : </th>\n              <td> {Virgin}</td>\n            </tr>\n            <tr>\n              <th>Brunei : </th>\n              <td> {Brunei}</td>\n            </tr>\n          </table>\n          <ControllableStates />\n        </div>\n        <div id=\"countryImg\"></div>\n      </div>\n    </>\n  );\n};\n\nexport default MainDoc;\n","import logo from './logo.svg';\nimport './App.css';\nimport MainDoc from './components/MainDoc'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainDoc />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { FetchOrders, FetchOrders1, FetchOrders2 } from \"./FetchOrders\";\nimport moment from \"moment\";\n\nexport const initialState = {\n  cases: \"\",\n  Afghanistan: \"\",\n  Albania: \"\",\n  Algeria: \"\",\n  Andorra: \"\",\n  Angola: \"\",\n  Anguilla: \"\",\n  Antigua: \"\",\n  Argentina: \"\",\n  Armenia: \"\",\n  Aruba: \"\",\n  Australia: \"\",\n  Austria: \"\",\n  Azerbaijan: \"\",\n  Bahamas: \"\",\n  Bahrain: \"\",\n  Bangladesh: \"\",\n  Barbados: \"\",\n  Belarus: \"\",\n  Belgium: \"\",\n  Belize: \"\",\n  Benin: \"\",\n  Bermuda: \"\",\n  Bhutan: \"\",\n  Bolivia: \"\",\n  Caribbean: \"\",\n  Bosnia: \"\",\n  Botswana: \"\",\n  Brazil: \"\",\n  Virgin: \"\",\n  Brunei: \"\",\n  Bulgaria: \"\",\n  Burkina: \"\",\n  Cambodia: \"\",\n  Cameroon: \"\",\n  Canada: \"\",\n  Cabo: \"\",\n  Cayman: \"\",\n  Central: \"\",\n  Chad: \"\",\n  Chile: \"\",\n  China: \"\",\n  Colombia: \"\",\n  Comoros: \"\",\n  Congo: \"\",\n  Cook: \"\",\n  Costa: \"\",\n  Côte: \"\",\n  Croatia: \"\",\n  Cuba: \"\",\n  Curaçao: \"\",\n  Cyprus: \"\",\n  Czechia: \"\",\n  DRC: \"\",\n  Denmark: \"\",\n  Djibouti: \"\",\n  Dominica: \"\",\n  Dominican: \"\",\n  Ecuador: \"\",\n  Egypt: \"\",\n  Salvador: \"\",\n  Guinea: \"\",\n  Estonia: \"\",\n  Swaziland: \"\",\n  Ethiopia: \"\",\n  Faroe: \"\",\n  Falkland: \"\",\n  Fiji: \"\",\n  Finland: \"\",\n  France: \"\",\n  Polynesia: \"\",\n  Gabon: \"\",\n  Gambia: \"\",\n  Georgia: \"\",\n  Germany: \"\",\n  Ghana: \"\",\n  Gibraltar: \"\",\n  Greece: \"\",\n  Greenland: \"\",\n  Grenada: \"\",\n  Guatemala: \"\",\n  Guernsey: \"\",\n  covidImg: \"\",\n  status: false,\n  error: \"\",\n  status1: false,\n  error1: \"\",\n  status2: false,\n  error2: \"\",\n};\n\nconst yesdate = moment().subtract(1, \"days\").format(\"M/D/YY\");\n\nconst UserReducer = createSlice({\n  name: \"empty\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [FetchOrders.pending]: (state) => {\n      state.status = \"loading\";\n      state.name = \"loading\";\n    },\n\n    [FetchOrders.fulfilled]: (state, action) => {\n      state.status = \"suceeded\";\n      state.cases = action.payload;\n    },\n\n    [FetchOrders.rejected]: (state, action) => {\n      state.status = \"failed\";\n      state.error = action.error.message;\n    },\n\n    //Vaccine Reducers\n    [FetchOrders1.pending]: (state) => {\n      state.status1 = \"loading\";\n      state.name1 = \"loading\";\n    },\n\n    [FetchOrders1.fulfilled]: (state, action) => {\n      state.status1 = \"suceeded\";\n      state.Afghanistan = action.payload[0].timeline[yesdate];\n      state.Albania = action.payload[1].timeline[yesdate];\n      state.Algeria = action.payload[2].timeline[yesdate];\n      state.Andorra = action.payload[3].timeline[yesdate];\n      state.Angola = action.payload[4].timeline[yesdate];\n      state.Anguilla = action.payload[5].timeline[yesdate];\n      state.Antigua = action.payload[6].timeline[yesdate];\n      state.Argentina = action.payload[7].timeline[yesdate];\n      state.Armenia = action.payload[8].timeline[yesdate];\n      state.Aruba = action.payload[9].timeline[yesdate];\n      state.Australia = action.payload[10].timeline[yesdate];\n      state.Austria = action.payload[11].timeline[yesdate];\n      state.Azerbaijan = action.payload[12].timeline[yesdate];\n      state.Bahamas = action.payload[13].timeline[yesdate];\n      state.Bahrain = action.payload[14].timeline[yesdate];\n      state.Bangladesh = action.payload[15].timeline[yesdate];\n      state.Barbados = action.payload[16].timeline[yesdate];\n      state.Belarus = action.payload[17].timeline[yesdate];\n      state.Belgium = action.payload[18].timeline[yesdate];\n      state.Belize = action.payload[19].timeline[yesdate];\n      state.Benin = action.payload[20].timeline[yesdate];\n      state.Bermuda = action.payload[21].timeline[yesdate];\n      state.Bhutan = action.payload[22].timeline[yesdate];\n      state.Bolivia = action.payload[23].timeline[yesdate];\n      state.Caribbean = action.payload[24].timeline[yesdate];\n      state.Bosnia = action.payload[25].timeline[yesdate];\n      state.Botswana = action.payload[26].timeline[yesdate];\n      state.Brazil = action.payload[27].timeline[yesdate];\n      state.Virgin = action.payload[28].timeline[yesdate];\n      state.Brunei = action.payload[29].timeline[yesdate];\n      state.Bulgaria = action.payload[30].timeline[yesdate];\n      state.Burkina = action.payload[31].timeline[yesdate];\n      state.Cambodia = action.payload[32].timeline[yesdate];\n      state.Cameroon = action.payload[33].timeline[yesdate];\n      state.Canada = action.payload[34].timeline[yesdate];\n      state.Cabo = action.payload[35].timeline[yesdate];\n      state.Cayman = action.payload[36].timeline[yesdate];\n      state.Central = action.payload[37].timeline[yesdate];\n      state.Chad = action.payload[38].timeline[yesdate];\n      state.Chile = action.payload[39].timeline[yesdate];\n      state.China = action.payload[40].timeline[yesdate];\n      state.Colombia = action.payload[41].timeline[yesdate];\n      state.Comoros = action.payload[42].timeline[yesdate];\n      state.Congo = action.payload[43].timeline[yesdate];\n      state.Cook = action.payload[44].timeline[yesdate];\n      state.Costa = action.payload[45].timeline[yesdate];\n      state.Côte = action.payload[46].timeline[yesdate];\n      state.Croatia = action.payload[47].timeline[yesdate];\n      state.Cuba = action.payload[48].timeline[yesdate];\n      state.Curaçao = action.payload[49].timeline[yesdate];\n      state.Cyprus = action.payload[50].timeline[yesdate];\n      state.Czechia = action.payload[51].timeline[yesdate];\n    },\n\n    [FetchOrders1.rejected]: (state, action) => {\n      state.status1 = \"failed\";\n      state.error1 = action.error.message;\n    },\n\n    [FetchOrders2.pending]: (state) => {\n      state.status2 = \"loading\";\n    },\n\n    [FetchOrders2.fulfilled]: (state, action) => {\n      state.covidImg = action.payload;\n      state.status2 = \"failed\";\n    },\n\n    [FetchOrders2.rejected]: (state, action) => {\n      state.status = \"failed\";\n      state.error2 = action.error.message;\n    },\n  },\n});\n\nexport const FetchOrders3 = UserReducer.actions;\n\n//export const {} = UserReducer.actions\nexport default UserReducer.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport UserReducer from \"./Pages/UserReducer\";\n//import { persistReducer } from \"redux-persist\";\n//import storage from \"redux-persist/lib/storage\";\n\n// const reducers = combineReducers({\n//     purchaseOrders: UserReducer.reducer\n//   });\n  \n//   const persistConfig = {\n//     key: \"root\",\n//     storage\n//   };\n  \n//   const persistedReducer = persistReducer(persistConfig, reducers);\n\nconst store = configureStore({\n    reducer: UserReducer\n})\n\nexport default store;","import React from 'react';\nimport ReactDOM from \"react-dom\";\n//import { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\n\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}